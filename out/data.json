{
    "project": {},
    "files": {
        "api/access.js": {
            "name": "api/access.js",
            "modules": {},
            "classes": {
                "api.log": 1
            },
            "fors": {},
            "namespaces": {
                "api": 1
            }
        },
        "api/approach.js": {
            "name": "api/approach.js",
            "modules": {},
            "classes": {
                "api.Approach": 1
            },
            "fors": {},
            "namespaces": {
                "api": 1
            }
        },
        "api/auth.js": {
            "name": "api/auth.js",
            "modules": {},
            "classes": {
                "api.Auth": 1
            },
            "fors": {},
            "namespaces": {
                "api": 1
            }
        },
        "api/azureapi.js": {
            "name": "api/azureapi.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "api/azurestorage.js": {
            "name": "api/azurestorage.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "api": 1
            }
        },
        "api/bug.js": {
            "name": "api/bug.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "api/core.js": {
            "name": "api/core.js",
            "modules": {},
            "classes": {
                "api.core": 1
            },
            "fors": {},
            "namespaces": {
                "api": 1
            }
        },
        "api/customer.js": {
            "name": "api/customer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "api/environment.js": {
            "name": "api/environment.js",
            "modules": {},
            "classes": {
                "api.Environment": 1
            },
            "fors": {},
            "namespaces": {
                "api": 1
            }
        },
        "api/query.js": {
            "name": "api/query.js",
            "modules": {},
            "classes": {
                "api.Query": 1
            },
            "fors": {},
            "namespaces": {
                "api": 1
            }
        },
        "api/querydoc.js": {
            "name": "api/querydoc.js",
            "modules": {},
            "classes": {
                "api.QueryDOc": 1
            },
            "fors": {},
            "namespaces": {
                "api": 1
            }
        },
        "api/role.js": {
            "name": "api/role.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "api/scenario.js": {
            "name": "api/scenario.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "api/scenariottag.js": {
            "name": "api/scenariottag.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "api/schedulescenario.js": {
            "name": "api/schedulescenario.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "api/segment.js": {
            "name": "api/segment.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "api/table.js": {
            "name": "api/table.js",
            "modules": {},
            "classes": {
                "api.Table": 1
            },
            "fors": {},
            "namespaces": {
                "api": 1
            }
        },
        "api/tag.js": {
            "name": "api/tag.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "api/triggerscenario.js": {
            "name": "api/triggerscenario.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "api/user.js": {
            "name": "api/user.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "api.log": {
            "name": "api.log",
            "shortname": "api.log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "api",
            "file": "api/access.js",
            "line": 33,
            "description": "操作履歴APIのクラス",
            "extends": "api.core",
            "is_constructor": 1
        },
        "api.Approach": {
            "name": "api.Approach",
            "shortname": "api.Approach",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "api",
            "file": "api/approach.js",
            "line": 41,
            "description": "アプローチ機能APIのクラス",
            "is_constructor": 1,
            "extends": "api.core"
        },
        "api.Auth": {
            "name": "api.Auth",
            "shortname": "api.Auth",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "api",
            "file": "api/auth.js",
            "line": 26,
            "description": "認証機能APIのクラス",
            "is_constructor": 1,
            "extends": "api.core"
        },
        "api.core": {
            "name": "api.core",
            "shortname": "api.core",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "api",
            "file": "api/core.js",
            "line": 4,
            "description": "core class",
            "is_constructor": 1
        },
        "api.Environment": {
            "name": "api.Environment",
            "shortname": "api.Environment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "api",
            "file": "api/environment.js",
            "line": 25,
            "description": "環境情報のAPIのクラス",
            "is_constructor": 1,
            "extends": "api.core"
        },
        "api.Query": {
            "name": "api.Query",
            "shortname": "api.Query",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "api",
            "file": "api/query.js",
            "line": 44,
            "description": "クエリー機能APIのクラス",
            "is_constructor": 1,
            "extends": "api.core"
        },
        "api.QueryDOc": {
            "name": "api.QueryDOc",
            "shortname": "api.QueryDOc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "api",
            "file": "api/querydoc.js",
            "line": 34,
            "description": "クエリーDocument機能APIのクラス",
            "is_constructor": 1
        },
        "api.Table": {
            "name": "api.Table",
            "shortname": "api.Table",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "api",
            "file": "api/table.js",
            "line": 3,
            "description": "クエリー機能APIのクラス",
            "is_constructor": 1,
            "extends": "api.core"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "api/access.js",
            "line": 5,
            "description": "テーブル名",
            "itemtype": "property",
            "name": "TABLE_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.log"
        },
        {
            "file": "api/access.js",
            "line": 12,
            "description": "主キー名",
            "itemtype": "property",
            "name": "PK_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.log"
        },
        {
            "file": "api/access.js",
            "line": 19,
            "description": "機能番号",
            "itemtype": "property",
            "name": "FUNCTION_NAME",
            "type": "{Number}",
            "final": 1,
            "class": "api.log"
        },
        {
            "file": "api/access.js",
            "line": 26,
            "description": "機能名",
            "itemtype": "property",
            "name": "FUNCTION_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.log"
        },
        {
            "file": "api/access.js",
            "line": 84,
            "description": "リクエストパラメータのチェックを行う",
            "itemtype": "method",
            "name": "validation",
            "params": [
                {
                    "name": "key",
                    "description": "実行対象メソッド名",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "チェック対象パラメータオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "api.log",
            "namespace": "api"
        },
        {
            "file": "api/access.js",
            "line": 100,
            "description": "指定された日の操作ログをすべて取得する",
            "itemtype": "method",
            "name": "getDayAll",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object",
                    "props": [
                        {
                            "name": "body",
                            "description": "POSTされたパラメータを格納したオブジェクト",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "day",
                                    "description": "指定日 YYYY-MM-DD形式",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "data 操作履歴の取得結果<br>\n以下のプロパティを持つobjectの配列をjsonとして返却する\n    <ul>\n    <li>log_id: PK</li>\n    <li>date: 操作日(yyyy-MM-dd hh:mm:ss)</li>\n    <li>user_id: ユーザーID</li>\n    <li>detail: 内容</li>\n    <li>name: ユーザー名</li>\n    </ul>",
                "type": "Json"
            },
            "class": "api.log",
            "namespace": "api"
        },
        {
            "file": "api/access.js",
            "line": 153,
            "description": "指定された日の操作ログをすべて取得する",
            "itemtype": "method",
            "name": "getDayAllByUserId",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object",
                    "props": [
                        {
                            "name": "body",
                            "description": "POSTされたパラメータを格納したオブジェクト",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "id",
                                    "description": "指定日 YYYY-MM-DD形式",
                                    "type": "Int"
                                },
                                {
                                    "name": "day",
                                    "description": "指定日 YYYY-MM-DD形式",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "data 操作履歴の取得結果<br>\n以下のプロパティを持つobjectの配列をjsonとして返却する\n    <ul>\n    <li>log_id: PK</li>\n    <li>date: 操作日(yyyy-MM-dd hh:mm:ss)</li>\n    <li>user_id: ユーザーID</li>\n    <li>detail: 内容</li>\n    <li>name: ユーザー名</li>\n    </ul>",
                "type": "Json"
            },
            "class": "api.log",
            "namespace": "api"
        },
        {
            "file": "api/approach.js",
            "line": 5,
            "description": "テーブル名",
            "itemtype": "property",
            "name": "TABLE_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Approach",
            "namespace": "api"
        },
        {
            "file": "api/approach.js",
            "line": 12,
            "description": "主キー名",
            "itemtype": "property",
            "name": "PK_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Approach",
            "namespace": "api"
        },
        {
            "file": "api/approach.js",
            "line": 19,
            "description": "SEQ名",
            "itemtype": "property",
            "name": "SEQ_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Approach",
            "namespace": "api"
        },
        {
            "file": "api/approach.js",
            "line": 26,
            "description": "機能名",
            "itemtype": "property",
            "name": "FUNCTION_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Approach",
            "namespace": "api"
        },
        {
            "file": "api/approach.js",
            "line": 33,
            "description": "機能番号",
            "itemtype": "property",
            "name": "FUNCTION_NAME",
            "type": "{Number}",
            "final": 1,
            "class": "api.Approach",
            "namespace": "api"
        },
        {
            "file": "api/approach.js",
            "line": 91,
            "description": "リクエストパラメータのチェックを行う",
            "itemtype": "method",
            "name": "validation",
            "params": [
                {
                    "name": "key",
                    "description": "実行対象メソッド名",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "チェック対象パラメータオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "api.Approach",
            "namespace": "api"
        },
        {
            "file": "api/approach.js",
            "line": 107,
            "description": "アプローチマスタのデータが存在している場合は取得し、存在していない場合は新規作成する",
            "itemtype": "method",
            "name": "getOrCreate",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "data 操作履歴の取得結果<br>\n以下のプロパティを持つobjectをjsonとして返却する\n    <ul>\n    <li>daily_limit_num: 1日の制限回数</li>\n    <li>weekly_limit_num: 1週間の制限回数</li>\n    </ul>",
                "type": "Json"
            },
            "class": "api.Approach",
            "namespace": "api"
        },
        {
            "file": "api/approach.js",
            "line": 174,
            "description": "アプローチマスタのデータを保存する",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object",
                    "props": [
                        {
                            "name": "body",
                            "description": "POSTされたパラメータを格納したオブジェクト",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "daily_limit_num",
                                    "description": "1日の制限回数",
                                    "type": "Number"
                                },
                                {
                                    "name": "weekly_limit_num",
                                    "description": "1週間の制限回数",
                                    "type": "Number"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "<ul>\n    <li>正常終了の場合:ステータスコード200</li>\n    <li>以上終了の場合:ステータスコード510</li>\n    </ul>"
            },
            "class": "api.Approach",
            "namespace": "api"
        },
        {
            "file": "api/auth.js",
            "line": 4,
            "description": "テーブル名",
            "itemtype": "property",
            "name": "TABLE_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Auth",
            "namespace": "api"
        },
        {
            "file": "api/auth.js",
            "line": 11,
            "description": "主キー名",
            "itemtype": "property",
            "name": "PK_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Auth",
            "namespace": "api"
        },
        {
            "file": "api/auth.js",
            "line": 18,
            "description": "機能番号",
            "itemtype": "property",
            "name": "FUNCTION_NAME",
            "type": "{Number}",
            "final": 1,
            "class": "api.Auth",
            "namespace": "api"
        },
        {
            "file": "api/auth.js",
            "line": 45,
            "description": "ログイン状態かを判定する",
            "itemtype": "method",
            "name": "isLogin",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ログイン状態の場合、以下のプロパティを持つオブジェクトをJsonで返却する\n<ul>\n<li>user_id: ユーザーID</li>\n<li>name: ユーザー名</li>\n<li>role_id: ロールID</li>\n</ul>",
                "type": "Json | status code 511"
            },
            "class": "api.Auth",
            "namespace": "api"
        },
        {
            "file": "api/auth.js",
            "line": 76,
            "description": "リクエストを受け取り、ログインを行う.",
            "itemtype": "method",
            "name": "login",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object",
                    "props": [
                        {
                            "name": "body",
                            "description": "POSTされたパラメータを格納したオブジェクト",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "mailAddress",
                                    "description": "メールアドレス",
                                    "type": "Number"
                                },
                                {
                                    "name": "password",
                                    "description": "パスワード",
                                    "type": "Number"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ログイン状態の場合、以下のプロパティを持つオブジェクトをJsonで返却する\n<ul>\n<li>user_id: ユーザーID</li>\n<li>name: ユーザー名</li>\n<li>role_id: ロールID</li>\n</ul>",
                "type": "Json | status code 511"
            },
            "class": "api.Auth",
            "namespace": "api"
        },
        {
            "file": "api/auth.js",
            "line": 123,
            "description": "セッションを破棄してログアウト状態を作り出す",
            "itemtype": "method",
            "name": "login",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Auth",
            "namespace": "api"
        },
        {
            "file": "api/azureapi.js",
            "line": 21,
            "description": "顧客の情報を取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.core",
            "namespace": "api"
        },
        {
            "file": "api/azurestorage.js",
            "line": 6,
            "description": "azure storage sdk を利用してstorage操作を行うAPI",
            "static": 1,
            "class": "api.core",
            "namespace": "api"
        },
        {
            "file": "api/azurestorage.js",
            "line": 13,
            "description": "azure storage コンテナーを作成する",
            "itemtype": "method",
            "name": "createContainer",
            "params": [
                {
                    "name": "containerName",
                    "description": "実行対象メソッド名",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "コールバック",
                    "type": "Functon"
                }
            ],
            "class": "api.core",
            "namespace": "api"
        },
        {
            "file": "api/azurestorage.js",
            "line": 28,
            "description": "azure blob storageへアップロードを行う。",
            "params": [
                {
                    "name": "uploadInfo",
                    "description": "アップロード情報",
                    "type": "Object",
                    "props": [
                        {
                            "name": "containerName",
                            "description": "アップロード先コンテナ名",
                            "type": "Functon"
                        },
                        {
                            "name": "uploadName",
                            "description": "コンテナへアップロードする際のファイル名",
                            "type": "Functon"
                        },
                        {
                            "name": "localFileName",
                            "description": "アップロード対象のファイル名",
                            "type": "Functon"
                        }
                    ]
                },
                {
                    "name": "mainCallback",
                    "description": "コールバック",
                    "type": "Functon"
                }
            ],
            "class": "api.core",
            "namespace": "api"
        },
        {
            "file": "api/azurestorage.js",
            "line": 83,
            "description": "azure blob storageからダウンロードを行う。",
            "params": [
                {
                    "name": "downLoadInfo",
                    "description": "ダウンロード情報",
                    "type": "Object"
                },
                {
                    "name": "uploadInfo.containerName",
                    "description": "アップロード先コンテナ名",
                    "type": "Functon"
                },
                {
                    "name": "uploadInfo.blobName",
                    "description": "コンテナに格納されているファイル名",
                    "type": "Functon"
                },
                {
                    "name": "uploadInfo.dowloadName",
                    "description": "ダウンロード時のファイル名",
                    "type": "Functon"
                },
                {
                    "name": "mainCallback",
                    "description": "コールバック",
                    "type": "Functon"
                }
            ],
            "class": "api.core",
            "namespace": "api"
        },
        {
            "file": "api/bug.js",
            "line": 5,
            "class": "api.core",
            "namespace": "api"
        },
        {
            "file": "api/core.js",
            "line": 109,
            "description": "シーケンス値を取得する.",
            "author": "niikawa",
            "itemtype": "method",
            "name": "getNextSeq",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "api.core",
            "namespace": "api"
        },
        {
            "file": "api/core.js",
            "line": 123,
            "description": "値をすべて取得する.",
            "author": "niikawa",
            "itemtype": "method",
            "name": "getAllSync",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "api.core",
            "namespace": "api"
        },
        {
            "file": "api/core.js",
            "line": 157,
            "description": "_idに合致した情報を取得する.",
            "author": "niikawa",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "api.core",
            "namespace": "api"
        },
        {
            "file": "api/customer.js",
            "line": 4,
            "class": "api.Environment",
            "namespace": "api"
        },
        {
            "file": "api/customer.js",
            "line": 18,
            "description": "顧客の情報を取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Environment",
            "namespace": "api"
        },
        {
            "file": "api/customer.js",
            "line": 42,
            "description": "顧客の一覧を取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Environment",
            "namespace": "api"
        },
        {
            "file": "api/customer.js",
            "line": 65,
            "class": "api.Environment",
            "namespace": "api"
        },
        {
            "file": "api/customer.js",
            "line": 148,
            "class": "api.Environment",
            "namespace": "api"
        },
        {
            "file": "api/environment.js",
            "line": 3,
            "description": "テーブル名",
            "itemtype": "property",
            "name": "TABLE_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Environment",
            "namespace": "api"
        },
        {
            "file": "api/environment.js",
            "line": 10,
            "description": "主キー名",
            "itemtype": "property",
            "name": "PK_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Environment",
            "namespace": "api"
        },
        {
            "file": "api/environment.js",
            "line": 17,
            "description": "SEQ名",
            "itemtype": "property",
            "name": "SEQ_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Environment",
            "namespace": "api"
        },
        {
            "file": "api/environment.js",
            "line": 44,
            "description": "環境情報を取得する",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "callback",
                    "description": "コールバック",
                    "type": "Function"
                }
            ],
            "example": [
                " \nemv.get(function(err, data)<br>\n{ <br>\n    //err is array<br>\n    if (0 < err.length )<br>\n    {<br> \n        //error時の処理<br>\n    }<br>\n    //data[0]で取得データにアクセスできる<br>\n});<br>"
            ],
            "class": "api.Environment",
            "namespace": "api"
        },
        {
            "file": "api/query.js",
            "line": 8,
            "description": "テーブル名",
            "itemtype": "property",
            "name": "TABLE_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Query",
            "namespace": "api"
        },
        {
            "file": "api/query.js",
            "line": 15,
            "description": "主キー名",
            "itemtype": "property",
            "name": "PK_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Query",
            "namespace": "api"
        },
        {
            "file": "api/query.js",
            "line": 22,
            "description": "SEQ名",
            "itemtype": "property",
            "name": "SEQ_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Query",
            "namespace": "api"
        },
        {
            "file": "api/query.js",
            "line": 29,
            "description": "機能名",
            "itemtype": "property",
            "name": "FUNCTION_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.Query",
            "namespace": "api"
        },
        {
            "file": "api/query.js",
            "line": 36,
            "description": "機能番号",
            "itemtype": "property",
            "name": "FUNCTION_NAME",
            "type": "{Number}",
            "final": 1,
            "class": "api.Query",
            "namespace": "api"
        },
        {
            "file": "api/query.js",
            "line": 105,
            "description": "リクエストパラメータのチェックを行う",
            "itemtype": "method",
            "name": "validation",
            "params": [
                {
                    "name": "key",
                    "description": "実行対象メソッド名",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "チェック対象パラメータオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "api.Query",
            "namespace": "api"
        },
        {
            "file": "api/query.js",
            "line": 121,
            "description": "クエリー一覧を生成するための情報を取得する",
            "itemtype": "method",
            "name": "getAll",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "data 操作履歴の取得結果<br>\n以下のプロパティを持つobjectの配列をjsonとして返却する\n<ul>\n<li>{String} id : ドキュメントID</li>\n<li>{String} query_name: クエリー名</li>\n<li>{Object} tables: key->利用テーブル名 value->カラム情報のオブジェクト</li>\n<li>{Bool} isUse: セグメントで利用されているか</li>\n<li>{Number} useNum: 利用しているセグメント数</li>\n</ul>",
                "type": "Json"
            },
            "class": "api.Query",
            "namespace": "api"
        },
        {
            "file": "api/query.js",
            "line": 184,
            "description": "パラメータからクエリーを作成し実行する",
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object",
                    "props": [
                        {
                            "name": "body",
                            "description": "POSTされたパラメータを格納したオブジェクト",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "tables",
                                    "description": "利用テーブルとカラムを保持したオブジェクト",
                                    "type": "Object"
                                },
                                {
                                    "name": "conditionList",
                                    "description": "条件句を生成するための条件を保持した配列",
                                    "type": "Array"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "result 実行結果の件数",
                "type": "Json"
            },
            "class": "api.Query",
            "namespace": "api"
        },
        {
            "file": "api/query.js",
            "line": 218,
            "description": "クエリーの登録/更新を行う",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object",
                    "props": [
                        {
                            "name": "body",
                            "description": "POSTされたパラメータを格納したオブジェクト",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "tables",
                                    "description": "利用テーブルとカラムを保持したオブジェクト",
                                    "type": "Object"
                                },
                                {
                                    "name": "conditionList",
                                    "description": "条件句を生成するための条件を保持した配列",
                                    "type": "Array"
                                },
                                {
                                    "name": "",
                                    "description": "",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "result 実行結果の件数",
                "type": "Json"
            },
            "class": "api.Query",
            "namespace": "api"
        },
        {
            "file": "api/query.js",
            "line": 254,
            "description": "クエリーの削除を行う",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object",
                    "props": [
                        {
                            "name": "params",
                            "description": "GETされたパラメータを格納したオブジェクト",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "id",
                                    "description": "queryコレクションID",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "<ul>\n    <li>正常終了の場合:ステータスコード200</li>\n    <li>パラメータ異常:ステータスコード511</li>\n    <li>クエリー実行異常終了の場合:ステータスコード512</li>\n    </ul>"
            },
            "class": "api.Query",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 8,
            "description": "コレクション名",
            "itemtype": "property",
            "name": "COLLECTION_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 15,
            "description": "機能名",
            "itemtype": "property",
            "name": "FUNCTION_NAME",
            "type": "{string}",
            "final": 1,
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 22,
            "description": "機能番号",
            "itemtype": "property",
            "name": "FUNCTION_NAME",
            "type": "{Number}",
            "final": 1,
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 44,
            "description": "IDに合致したQueryコレクションの情報と読み込み可能テーブル情報を取得する",
            "itemtype": "method",
            "name": "getByIdForInit",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object",
                    "props": [
                        {
                            "name": "params",
                            "description": "GETされたパラメータを格納したオブジェクト",
                            "type": "Object"
                        },
                        {
                            "name": "body.id",
                            "description": "クエリーコレクションのID",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "以下のプロパティを持つobjectをjsonとして返却する\n<ul>\n<li>{Objject} tables : 利用可能テーブル情報 {{#crossLink \"table\"}}{{/crossLink}}</li>\n<li>{Objject} data: コレクション情報 {{#crossLink \"collection.query:getItem\"}}{{/crossLink}}</li>\n</ul>",
                "type": "Json"
            },
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 91,
            "description": "IDに合致したQueryコレクションの情報を取得する",
            "itemtype": "method",
            "name": "getItem",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object",
                    "props": [
                        {
                            "name": "params",
                            "description": "GETされたパラメータを格納したオブジェクト",
                            "type": "Object"
                        },
                        {
                            "name": "body.id",
                            "description": "クエリーコレクションのID",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "以下のプロパティを持つobjectをjsonとして返却する\n<ul>\n<li>{Objject} data: コレクション情報 {{#crossLink \"collection.query:getItem\"}}{{/crossLink}}</li>\n</ul>",
                "type": "Json"
            },
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 121,
            "description": "Queryコレクションの情報を取得する",
            "itemtype": "method",
            "name": "getAllItem",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "以下のプロパティを持つobjectの配列をjsonとして返却する\n<ul>\n<li>{String} id: aueryコレクションID</li>\n<li>{String} query_name: クエリー名</li>\n<li>{Object} tables: 利用テーブル情報</li>\n</ul>",
                "type": "Json"
            },
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 152,
            "description": "Queryコレクションの情報を取得する",
            "itemtype": "method",
            "name": "getAllItemForWeb",
            "params": [
                {
                    "name": "callback",
                    "description": "コールバック",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "以下のプロパティを持つobjectの配列をjsonとして返却する\n<ul>\n<li>{String} id: aueryコレクションID</li>\n<li>{String} query_name: クエリー名</li>\n<li>{Object} tables: 利用テーブル情報</li>\n</ul>",
                "type": "Json"
            },
            "example": [
                " \nquerydoc.getAllItemForWeb(function(err, data)<br>\n{ <br>\n    //err is array<br>\n    if (0 < err.length )<br>\n    {<br> \n        //error時の処理<br>\n    }<br>\n    //data[0]で取得データにアクセスできる<br>\n});<br>\n"
            ],
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 182,
            "description": "Queryコレクションの情報を登録/更新する",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "data",
                    "description": "登録/更新用データオブジェクト",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "コールバック",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "以下のプロパティを持つobjectの配列をjsonとして返却する\n<ul>\n<li>{String} id: aueryコレクションID</li>\n<li>{String} query_name: クエリー名</li>\n<li>{Object} tables: 利用テーブル情報</li>\n</ul>",
                "type": "Json"
            },
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 231,
            "description": "Queryコレクションの情報を削除する。<br>\ncallbackへはerr情報と削除対象のコレクションをセットして実行する",
            "itemtype": "method",
            "name": "removeById",
            "params": [
                {
                    "name": "id",
                    "description": "queryコレクションID",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "コールバック",
                    "type": "Function"
                }
            ],
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 257,
            "description": "IDに合致したQueryコレクションの情報と読み込み可能テーブル情報を取得する\ncallbackへはerr情報と対象のコレクションをセットして実行する",
            "itemtype": "method",
            "name": "getItemByIdForWeb",
            "params": [
                {
                    "name": "id",
                    "description": "queryコレクションID",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "コールバック",
                    "type": "Function"
                }
            ],
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/querydoc.js",
            "line": 273,
            "description": "IDに合致したQueryコレクションの情報と読み込み可能テーブル情報を取得する\ncallbackへはerr情報と取得結果のコレクションをセットして実行する",
            "itemtype": "method",
            "name": "getItemByIdsForWeb",
            "params": [
                {
                    "name": "idList",
                    "description": "queryコレクションID",
                    "type": "Array"
                },
                {
                    "name": "columnList",
                    "description": "取得対象カラム",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "コールバック",
                    "type": "Function"
                }
            ],
            "class": "api.QueryDOc",
            "namespace": "api"
        },
        {
            "file": "api/role.js",
            "line": 4,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/role.js",
            "line": 6,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/role.js",
            "line": 8,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/role.js",
            "line": 22,
            "description": "顧客の情報を取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/role.js",
            "line": 45,
            "description": "顧客の一覧を取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 6,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 8,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 10,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 13,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 32,
            "description": "PKからデータを取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 56,
            "description": "delete_flagのたっていないシナリオをすべて取得する\n並び順はPKの昇順",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 140,
            "description": "アプローチ対象のシナリオを取得する\n並び順はpriorityとscenario_idの昇順",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 168,
            "description": "アプローチ対象のシナリオを取得する\n並び順はpriorityとscenario_idの昇順",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 244,
            "description": "実行予定のシナリオを取得する\n並び順はpriorityとscenario_idの昇順",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 282,
            "description": "実行予定のシナリオをカレンダー表示用に整形した結果を取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 522,
            "description": "アプローチ対象のシナリオを無効にする",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 550,
            "description": "アプローチ対象の無効なシナリオを有効にする",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 578,
            "description": "priorityとstatusを更新する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 633,
            "description": "シナリオを保存する\nパラメータにPKが存在するか否かで登録するか更新するかを決定する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 691,
            "description": "シナリオを登録する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 920,
            "description": "パラメータのtagsにidのプロパティがなければそれは新規作成となり\nT_TAGに登録される。\nただし、同一名称のものが存在した場合は、登録しない。",
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 937,
            "description": "シナリオにタグを設定する",
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 952,
            "description": "シナリオを更新する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 1151,
            "description": "PKに合致したレコードのdelete_flagを1にする",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 1324,
            "description": "PKに合致したレコードを物理削除する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 1344,
            "description": "シナリオコントロール画面に表示する初期値を取得する\nリクエストにシナリオIDが存在する場合は該当情報も取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 1479,
            "description": "同一名称が存在するかをチェックする\nリクエスト値にシナリオIDが存在する場合は該当レコードの名称を除外してチェックする",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenario.js",
            "line": 1519,
            "description": "action.jsonからパラメータのnameと合致する情報を取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenariottag.js",
            "line": 4,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/scenariottag.js",
            "line": 7,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/schedulescenario.js",
            "line": 1,
            "description": "本テーブルはアプリケーションから直接データ操作が行われる想定はない",
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/schedulescenario.js",
            "line": 7,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/schedulescenario.js",
            "line": 9,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/schedulescenario.js",
            "line": 11,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/schedulescenario.js",
            "line": 25,
            "description": "PKからデータを取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/segment.js",
            "line": 8,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/segment.js",
            "line": 10,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/segment.js",
            "line": 12,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/segment.js",
            "line": 14,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/segment.js",
            "line": 134,
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/table.js",
            "line": 19,
            "description": "参照可能なテーブル情報とカラム情報を取得する",
            "itemtype": "method",
            "name": "getTablesList",
            "params": [
                {
                    "name": "callback",
                    "description": "コールバック",
                    "type": "Function"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/table.js",
            "line": 110,
            "description": "参照可能なテーブル情報とカラム情報を取得する",
            "itemtype": "method",
            "name": "getTables",
            "params": [
                {
                    "name": "req",
                    "description": "リクエストオブジェクト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "レスポンスオブジェクト",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "<li> tables : 利用可能テーブル情報 {{#crossLink \"Table:getTablesList\"}}{{/crossLink}}</li>",
                "type": "Objject"
            },
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/table.js",
            "line": 133,
            "description": "参照可能なテーブル情報とカラム情報を取得する",
            "itemtype": "method",
            "name": "getTables",
            "params": [
                {
                    "name": "callback",
                    "description": "コールバック",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<li> tables : 利用可能テーブル情報 {{#crossLink \"Table:getTablesList\"}}{{/crossLink}}</li>",
                "type": "Objject"
            },
            "class": "api.Table",
            "namespace": "api"
        },
        {
            "file": "api/tag.js",
            "line": 4,
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/tag.js",
            "line": 7,
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/triggerscenario.js",
            "line": 1,
            "description": "本テーブルはアプリケーションから直接データ操作が行われる想定はない",
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/triggerscenario.js",
            "line": 7,
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/triggerscenario.js",
            "line": 9,
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/triggerscenario.js",
            "line": 11,
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/triggerscenario.js",
            "line": 25,
            "description": "PKからデータを取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/user.js",
            "line": 5,
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/user.js",
            "line": 7,
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/user.js",
            "line": 9,
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/user.js",
            "line": 11,
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/user.js",
            "line": 25,
            "description": "顧客の情報を取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/user.js",
            "line": 51,
            "description": "顧客の一覧を取得する",
            "params": [
                {
                    "name": "req",
                    "description": "画面からのリクエスト",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "画面へのレスポンス",
                    "type": "Object"
                }
            ],
            "class": "",
            "namespace": "api"
        },
        {
            "file": "api/user.js",
            "line": 74,
            "description": "全ユーザーを取得する",
            "class": "",
            "namespace": "api"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\n顧客の情報を取得する",
            "line": " api/azureapi.js:21"
        },
        {
            "message": "Missing item type\nazure storage sdk を利用してstorage操作を行うAPI",
            "line": " api/azurestorage.js:6"
        },
        {
            "message": "Missing item type\nazure blob storageへアップロードを行う。",
            "line": " api/azurestorage.js:28"
        },
        {
            "message": "Missing item type\nazure blob storageからダウンロードを行う。",
            "line": " api/azurestorage.js:83"
        },
        {
            "message": "Missing item type",
            "line": " api/bug.js:5"
        },
        {
            "message": "Missing item type",
            "line": " api/customer.js:4"
        },
        {
            "message": "Missing item type\n顧客の情報を取得する",
            "line": " api/customer.js:18"
        },
        {
            "message": "Missing item type\n顧客の一覧を取得する",
            "line": " api/customer.js:42"
        },
        {
            "message": "Missing item type",
            "line": " api/customer.js:65"
        },
        {
            "message": "Missing item type",
            "line": " api/customer.js:148"
        },
        {
            "message": "Missing item type",
            "line": " api/role.js:4"
        },
        {
            "message": "Missing item type",
            "line": " api/role.js:6"
        },
        {
            "message": "Missing item type",
            "line": " api/role.js:8"
        },
        {
            "message": "Missing item type\n顧客の情報を取得する",
            "line": " api/role.js:22"
        },
        {
            "message": "Missing item type\n顧客の一覧を取得する",
            "line": " api/role.js:45"
        },
        {
            "message": "Missing item type",
            "line": " api/scenario.js:6"
        },
        {
            "message": "Missing item type",
            "line": " api/scenario.js:8"
        },
        {
            "message": "Missing item type",
            "line": " api/scenario.js:10"
        },
        {
            "message": "Missing item type",
            "line": " api/scenario.js:13"
        },
        {
            "message": "Missing item type\nPKからデータを取得する",
            "line": " api/scenario.js:32"
        },
        {
            "message": "Missing item type\ndelete_flagのたっていないシナリオをすべて取得する\n並び順はPKの昇順",
            "line": " api/scenario.js:56"
        },
        {
            "message": "Missing item type\nアプローチ対象のシナリオを取得する\n並び順はpriorityとscenario_idの昇順",
            "line": " api/scenario.js:140"
        },
        {
            "message": "Missing item type\nアプローチ対象のシナリオを取得する\n並び順はpriorityとscenario_idの昇順",
            "line": " api/scenario.js:168"
        },
        {
            "message": "Missing item type\n実行予定のシナリオを取得する\n並び順はpriorityとscenario_idの昇順",
            "line": " api/scenario.js:244"
        },
        {
            "message": "Missing item type\n実行予定のシナリオをカレンダー表示用に整形した結果を取得する",
            "line": " api/scenario.js:282"
        },
        {
            "message": "Missing item type\nアプローチ対象のシナリオを無効にする",
            "line": " api/scenario.js:522"
        },
        {
            "message": "Missing item type\nアプローチ対象の無効なシナリオを有効にする",
            "line": " api/scenario.js:550"
        },
        {
            "message": "Missing item type\npriorityとstatusを更新する",
            "line": " api/scenario.js:578"
        },
        {
            "message": "Missing item type\nシナリオを保存する\nパラメータにPKが存在するか否かで登録するか更新するかを決定する",
            "line": " api/scenario.js:633"
        },
        {
            "message": "Missing item type\nシナリオを登録する",
            "line": " api/scenario.js:691"
        },
        {
            "message": "Missing item type\nパラメータのtagsにidのプロパティがなければそれは新規作成となり\nT_TAGに登録される。\nただし、同一名称のものが存在した場合は、登録しない。",
            "line": " api/scenario.js:920"
        },
        {
            "message": "Missing item type\nシナリオにタグを設定する",
            "line": " api/scenario.js:937"
        },
        {
            "message": "Missing item type\nシナリオを更新する",
            "line": " api/scenario.js:952"
        },
        {
            "message": "Missing item type\nPKに合致したレコードのdelete_flagを1にする",
            "line": " api/scenario.js:1151"
        },
        {
            "message": "Missing item type\nPKに合致したレコードを物理削除する",
            "line": " api/scenario.js:1324"
        },
        {
            "message": "Missing item type\nシナリオコントロール画面に表示する初期値を取得する\nリクエストにシナリオIDが存在する場合は該当情報も取得する",
            "line": " api/scenario.js:1344"
        },
        {
            "message": "Missing item type\n同一名称が存在するかをチェックする\nリクエスト値にシナリオIDが存在する場合は該当レコードの名称を除外してチェックする",
            "line": " api/scenario.js:1479"
        },
        {
            "message": "Missing item type\naction.jsonからパラメータのnameと合致する情報を取得する",
            "line": " api/scenario.js:1519"
        },
        {
            "message": "Missing item type",
            "line": " api/scenariottag.js:4"
        },
        {
            "message": "Missing item type",
            "line": " api/scenariottag.js:7"
        },
        {
            "message": "Missing item type\n本テーブルはアプリケーションから直接データ操作が行われる想定はない",
            "line": " api/schedulescenario.js:1"
        },
        {
            "message": "Missing item type",
            "line": " api/schedulescenario.js:7"
        },
        {
            "message": "Missing item type",
            "line": " api/schedulescenario.js:9"
        },
        {
            "message": "Missing item type",
            "line": " api/schedulescenario.js:11"
        },
        {
            "message": "Missing item type\nPKからデータを取得する",
            "line": " api/schedulescenario.js:25"
        },
        {
            "message": "Missing item type",
            "line": " api/segment.js:8"
        },
        {
            "message": "Missing item type",
            "line": " api/segment.js:10"
        },
        {
            "message": "Missing item type",
            "line": " api/segment.js:12"
        },
        {
            "message": "Missing item type",
            "line": " api/segment.js:14"
        },
        {
            "message": "Missing item type",
            "line": " api/segment.js:134"
        },
        {
            "message": "Missing item type",
            "line": " api/tag.js:4"
        },
        {
            "message": "Missing item type",
            "line": " api/tag.js:7"
        },
        {
            "message": "Missing item type\n本テーブルはアプリケーションから直接データ操作が行われる想定はない",
            "line": " api/triggerscenario.js:1"
        },
        {
            "message": "Missing item type",
            "line": " api/triggerscenario.js:7"
        },
        {
            "message": "Missing item type",
            "line": " api/triggerscenario.js:9"
        },
        {
            "message": "Missing item type",
            "line": " api/triggerscenario.js:11"
        },
        {
            "message": "Missing item type\nPKからデータを取得する",
            "line": " api/triggerscenario.js:25"
        },
        {
            "message": "Missing item type",
            "line": " api/user.js:5"
        },
        {
            "message": "Missing item type",
            "line": " api/user.js:7"
        },
        {
            "message": "Missing item type",
            "line": " api/user.js:9"
        },
        {
            "message": "Missing item type",
            "line": " api/user.js:11"
        },
        {
            "message": "Missing item type\n顧客の情報を取得する",
            "line": " api/user.js:25"
        },
        {
            "message": "Missing item type\n顧客の一覧を取得する",
            "line": " api/user.js:51"
        },
        {
            "message": "Missing item type\n全ユーザーを取得する",
            "line": " api/user.js:74"
        }
    ]
}